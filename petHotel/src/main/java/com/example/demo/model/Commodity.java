package com.example.demo.model;
// Generated 2023年4月13日 下午9:55:39 by Hibernate Tools 3.6.2.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreRemove;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Commodity generated by hbm2java
 */
@Entity
@Table(name = "commodity", catalog = "pet_hotel_system")
public class Commodity implements java.io.Serializable {

	private Integer id;
	private CommodityGroup commodityGroup;
	private String name;
	private int limitCount;
	private int price;
	private int active;
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	private Set<OrderCommodity> orderCommodities = new HashSet<>(0);
	
	@PrePersist
	protected void onCreate() {
	    createdAt = new Date();
	}

	@PreUpdate
	protected void onUpdate() {
	    updatedAt = new Date();
	}

	@PreRemove
	protected void onDelete() {
	    deletedAt = new Date();
	}

	public Commodity() {
	}

	public Commodity(String name, int limitCount, int price, int active, Date createdAt) {
		this.name = name;
		this.limitCount = limitCount;
		this.price = price;
		this.active = active;
		this.createdAt = createdAt;
	}

	public Commodity(CommodityGroup commodityGroup, String name, int limitCount, int price, int active, Date createdAt,
			Date updatedAt, Date deletedAt, Set<OrderCommodity> orderCommodities) {
		this.commodityGroup = commodityGroup;
		this.name = name;
		this.limitCount = limitCount;
		this.price = price;
		this.active = active;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.orderCommodities = orderCommodities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "commodity_group_id")
	public CommodityGroup getCommodityGroup() {
		return this.commodityGroup;
	}

	public void setCommodityGroup(CommodityGroup commodityGroup) {
		this.commodityGroup = commodityGroup;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "limit_count", nullable = false)
	public int getLimitCount() {
		return this.limitCount;
	}

	public void setLimitCount(int limitCount) {
		this.limitCount = limitCount;
	}

	@Column(name = "price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Column(name = "active", nullable = false)
	public int getActive() {
		return this.active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 19)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commodity")
	public Set<OrderCommodity> getOrderCommodities() {
		return this.orderCommodities;
	}

	public void setOrderCommodities(Set<OrderCommodity> orderCommodities) {
		this.orderCommodities = orderCommodities;
	}

}
