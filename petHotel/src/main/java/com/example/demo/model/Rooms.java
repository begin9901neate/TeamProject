package com.example.demo.model;
// Generated 2023年4月13日 下午9:55:39 by Hibernate Tools 3.6.2.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreRemove;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import java.util.*;

/**
 * Rooms generated by hbm2java
 */
@Entity
@Table(name = "rooms", catalog = "pet_hotel_system")
public class Rooms implements java.io.Serializable {

	private Integer id;
	private Branch branch;
	private String name;
	private Integer maxPetNumber;
	private int price;
	private String size;
	private String equipment;
	private String note;
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	private List<RoomSession> roomSessions = new ArrayList<>(0);
	private List<OrderRooms> orderRoomses = new ArrayList<>(0);
	
	@PrePersist
	protected void onCreate() {
	    createdAt = new Date();
	}

	@PreUpdate
	protected void onUpdate() {
	    updatedAt = new Date();
	}

	@PreRemove
	protected void onDelete() {
	    deletedAt = new Date();
	}

	public Rooms() {
	}

	public Rooms(Branch branch, String name, int price, Date createdAt) {
		this.branch = branch;
		this.name = name;
		this.price = price;
		this.createdAt = createdAt;
	}

	public Rooms(Branch branch, String name, Integer maxPetNumber, int price, String size, String equipment,
			String note, Date createdAt, Date updatedAt, Date deletedAt, List<RoomSession> roomSessions, List<OrderRooms> orderRoomses) {
		this.branch = branch;
		this.name = name;
		this.maxPetNumber = maxPetNumber;
		this.price = price;
		this.size = size;
		this.equipment = equipment;
		this.note = note;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.roomSessions = roomSessions;
		this.orderRoomses = orderRoomses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "branch_id", nullable = false)
	public Branch getBranch() {
		return this.branch;
	}

	public void setBranch(Branch branch) {
		this.branch = branch;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "max_pet_number")
	public Integer getMaxPetNumber() {
		return this.maxPetNumber;
	}

	public void setMaxPetNumber(Integer maxPetNumber) {
		this.maxPetNumber = maxPetNumber;
	}

	@Column(name = "price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Column(name = "size", length = 45)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name = "equipment", length = 45)
	public String getEquipment() {
		return this.equipment;
	}

	public void setEquipment(String equipment) {
		this.equipment = equipment;
	}

	@Column(name = "note", length = 45)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Column(name = "created_at", nullable = false, length = 45)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated_at", length = 45)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 45)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rooms",  cascade = CascadeType.ALL)
	public List<RoomSession> getRoomSessions() {
		return this.roomSessions;
	}

	public void setRoomSessions(List<RoomSession> roomSessions) {
		this.roomSessions = roomSessions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rooms",  cascade = CascadeType.ALL)
	public List<OrderRooms> getOrderRoomses() {
		return this.orderRoomses;
	}

	public void setOrderRoomses(List<OrderRooms> orderRoomses) {
		this.orderRoomses = orderRoomses;
	}

}
