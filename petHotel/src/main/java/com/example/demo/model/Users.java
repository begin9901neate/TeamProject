package com.example.demo.model;
// Generated 2023年4月13日 下午9:55:39 by Hibernate Tools 3.6.2.Final

import java.util.*;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Where;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "pet_hotel_system")
@Where(clause = "deleted_at is null")//新增
public class Users implements java.io.Serializable {

	private Integer id;
	private PermissionSet permissionSet;
	private String email;
	private String password;
	private String chinesName;
	private String englishName;
	private String cellphone;
	private String address;
	private Integer age;
	private Integer gender;
	
	
	/*
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	*/
	
	@Column(name="created_at")
	@Temporal(TemporalType.TIMESTAMP)
	private Date createdAt;
	
	@Column(name="updated_at")
	@Temporal(TemporalType.TIMESTAMP)
	private Date updatedAt;
	
	@Column(name="deleted_at")
	
	@Temporal(TemporalType.TIMESTAMP)
	private Date deletedAt;
	
	
	
	private List<CustomerResponse> customerResponses = new ArrayList<>(0);
	private List<OrderRooms> orderRoomses = new ArrayList<>(0);
	private List<RoomSession> roomSessions = new ArrayList<>(0);
	private List<OrderCommodity> orderCommodities = new ArrayList<>(0);

	private String salt;//新增
	
	public Users() {
	}

	public Users(PermissionSet permissionSet, String email, String password, String chinesName, Date createdAt) {
		this.permissionSet = permissionSet;
		this.email = email;
		this.password = password;
		this.chinesName = chinesName;
		this.createdAt = createdAt;
	}

	public Users(PermissionSet permissionSet, String email, String password, String chinesName, String englishName,
			String cellphone, String address, Integer age, Integer gender, Date createdAt, Date updatedAt,
			Date deletedAt, List<CustomerResponse> customerResponses, List<OrderRooms> orderRoomses, List<RoomSession> roomSessions, List<OrderCommodity> orderCommodities) {
		this.permissionSet = permissionSet;
		this.email = email;
		this.password = password;
		this.chinesName = chinesName;
		this.englishName = englishName;
		this.cellphone = cellphone;
		this.address = address;
		this.age = age;
		this.gender = gender;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.customerResponses = customerResponses;
		this.orderRoomses = orderRoomses;
		this.roomSessions = roomSessions;
		this.orderCommodities = orderCommodities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)					//新增
	@JoinColumn(name = "permission_id", nullable = false,referencedColumnName="id")
	public PermissionSet getPermissionSet() {
		return this.permissionSet;
	}

	public void setPermissionSet(PermissionSet permissionSet) {
		this.permissionSet = permissionSet;
	}

	@Column(name = "email", nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "chines_name", nullable = false, length = 45)
	public String getChinesName() {
		return this.chinesName;
	}

	public void setChinesName(String chinesName) {
		this.chinesName = chinesName;
	}

	@Column(name = "english_name", length = 45)
	public String getEnglishName() {
		return this.englishName;
	}

	public void setEnglishName(String englishName) {
		this.englishName = englishName;
	}

	@Column(name = "cellphone", length = 45)
	public String getCellphone() {
		return this.cellphone;
	}

	public void setCellphone(String cellphone) {
		this.cellphone = cellphone;
	}

	@Column(name = "address", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "age")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		
		if(age==null) {
			age=0;
		}//新增判斷
		
		this.age = age;
	}

	@Column(name = "gender")
	public Integer getGender() {
		
		if(gender==null) {
			gender=0;
		}//新增判斷
		
		return this.gender;
	}

	public void setGender(Integer gender) {
		this.gender = gender;
	}
	
	
	public Date getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public Date getUpdatedAt() {
		return updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	public Date getDeletedAt() {
		return deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}
	
	
	
	
	
//	@Temporal(TemporalType.TIMESTAMP) //修改 先不用nullable = false, length = 19
//	@Column(name = "created_at"/*, nullable = false, length = 19*/)
//	public Date getCreatedAt() {
//		return this.createdAt;
//	}
//
//	public void setCreatedAt(Date createdAt) {
//		this.createdAt = createdAt;
//	}
//	
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "updated_at", length = 19)
//	public Date getUpdatedAt() {
//		return this.updatedAt;
//	}
//
//	public void setUpdatedAt(Date updatedAt) {
//		this.updatedAt = updatedAt;
//	}
//	
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "deleted_at", length = 19)
//	public Date getDeletedAt() {
//		return this.deletedAt;
//	}
//
//	public void setDeletedAt(Date deletedAt) {
//		this.deletedAt = deletedAt;
//	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users", cascade = CascadeType.ALL)
	public List<CustomerResponse> getCustomerResponses() {
		return this.customerResponses;
	}

	public void setCustomerResponses(List<CustomerResponse> customerResponses) {
		this.customerResponses = customerResponses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users", cascade = CascadeType.ALL)
	public List<OrderRooms> getOrderRoomses() {
		return this.orderRoomses;
	}

	public void setOrderRoomses(List<OrderRooms> orderRoomses) {
		this.orderRoomses = orderRoomses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users", cascade = CascadeType.ALL)
	public List<RoomSession> getRoomSessions() {
		return this.roomSessions;
	}

	public void setRoomSessions(List<RoomSession> roomSessions) {
		this.roomSessions = roomSessions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users", cascade = CascadeType.ALL)
	public List<OrderCommodity> getOrderCommodities() {
		return this.orderCommodities;
	}

	public void setOrderCommodities(List<OrderCommodity> orderCommodities) {
		this.orderCommodities = orderCommodities;
	}
	//新增
	public String getSalt() {
		return salt;
	}
	//新增
	public void setSalt(String salt) {
		this.salt = salt;
	}
	
	

}
